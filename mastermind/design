I will use the random library for the random generation of a code
I don't intent to use a gui

general overview of the program:
- shell program
welcomes the user and explains the program. Asks the user what they want to do.
welcome message: """
Welcome to mastermind!

Play mastermind against the computer.
Break the code or watch our code-breaker bot crack yours!

1) Break the code
2) Challenge our code-breaker bot
Press anything else to Quit

Enter your choice:
"""

initiate the route the user takes

routes:
    - user breaks the code (Break the code)
    amount of pins: 4; amount of colours: 8

        - generate random combination
        use random library
        generate a random list of 4 with integers from 0 up until 7

        - ask for guess
        translate colour input to integer

        - compare guess to combination
            - check red pins
            returns the amount of identical items on indexes between combination and guess
            - check white pins
            returns the amount of items that are in the guess and in the combination, but not on the same index

            if there are 4 red pins, go to step 'end'
            show red and white pins to user
            go to step 'ask for guess'

        - end
        congratulate user. show amount of guesses
        goes back to shell program


    - computer breaks the code (Challenge our code-breaker bot)
    amount of pins: 4; amount of colours: 6

        - create a list with all possible combinations
        every combination of [n, n, n, n] where n is 0 to 5 and no two lists are identical
        0000 0001 0010 0011 0100 0101 0110 0111 1000 1001 1010 1011 1100 1101 1110 1111 all combinations 0 and 1
        above without first and last 4 bits for every colour (int) combination (above was with 0 and 1, so also for 0
        and 2, 1 and 2, etc.)
        create list with full four bits (0000, 1111 ... 5555)
        all lists together are all combinations

        - choose first guess
        first guess:
        # source: artikel Universiteit van Groningen
        find the starter with the best (read: lowest) 'worst case scenario' (w.c.s. = the pin outcome of with the most possible
        combinations still left over after this new information)

        all other guesses:
        find the combination with the best 'worst case scenario'

        - receive answer
        answer_message: """please read carefully about how to give your answer to our bot:
        w = a white pin
        r = a red pin
        enter only w or r for every pin you want to answer. The order does not matter!
        (e.g. wwr for two white pins and one red)"""

        - eliminate all impossible combinations based upon received answer
        eliminate all combinations that would not generate same answer as received answer.
        for every combination check the following:
        if compare guess to combination = answer, combination is still valid.
            - compare guess to combination (see line 26 up until 30)
        else, combination has to be deleted.

        - end
        show amount of guesses
        goes back to shell program


    - quit (Quit)
    quits the program
